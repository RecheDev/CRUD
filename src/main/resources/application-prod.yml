spring:
  # Production datasource configuration (use environment variables)
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000

  # JPA configuration for production
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        generate_statistics: false
    hibernate:
      ddl-auto: validate

  # Flyway configuration for production
  flyway:
    enabled: true
    clean-disabled: true
    validate-on-migrate: true

# Server configuration for production
server:
  port: ${PORT:8080}
  error:
    include-message: false
    include-binding-errors: false
    include-stacktrace: never
    include-exception: false
  compression:
    enabled: true

# JWT configuration for production (must use strong secrets from env)
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

# Application-specific configuration for production
app:
  security:
    allowed-origins: ${CORS_ALLOWED_ORIGINS}

# Actuator configuration for production
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized

# OpenAPI/Swagger configuration for production (disabled for security)
springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false

# Logging configuration for production
logging:
  level:
    root: WARN
    com.portfolio.usermanagement: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  file:
    name: /var/log/user-management/application.log
    max-size: 100MB
    max-history: 30
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
